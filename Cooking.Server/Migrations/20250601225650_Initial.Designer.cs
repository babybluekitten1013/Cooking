// <auto-generated />
using Cooking.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cooking.Server.Migrations
{
    [DbContext(typeof(CookingDBContext))]
    [Migration("20250601225650_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cooking.Server.Models.Ingredent", b =>
                {
                    b.Property<int>("IngredentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredentID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredentID");

                    b.ToTable("Ingredents");

                    b.HasData(
                        new
                        {
                            IngredentID = 1,
                            Description = "Fruit",
                            Name = "Blueberry"
                        });
                });

            modelBuilder.Entity("Cooking.Server.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementID"));

                    b.Property<string>("MeasurementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeasurementID");

                    b.ToTable("Mesurements");

                    b.HasData(
                        new
                        {
                            MeasurementID = 1,
                            MeasurementName = "Cup"
                        });
                });

            modelBuilder.Entity("Cooking.Server.Models.MeasurementIngredient", b =>
                {
                    b.Property<int>("MeasurementIngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementIngredientID"));

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementID")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("MeasurementIngredientID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("MeasurementID");

                    b.HasIndex("RecipeID");

                    b.ToTable("MesurementIngredients");

                    b.HasData(
                        new
                        {
                            MeasurementIngredientID = 1,
                            Details = "For Batter",
                            IngredientID = 1,
                            MeasurementID = 1,
                            Quantity = 2.0,
                            RecipeID = 1
                        });
                });

            modelBuilder.Entity("Cooking.Server.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipeTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeID");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeID = 1,
                            Description = "Pastery",
                            Instructions = "mix and cook! ENJOY!",
                            Name = "Blueberry Muffin",
                            RecipeTag = "Breakfast"
                        });
                });

            modelBuilder.Entity("Cooking.Server.Models.MeasurementIngredient", b =>
                {
                    b.HasOne("Cooking.Server.Models.Ingredent", "Ingredent")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cooking.Server.Models.Measurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cooking.Server.Models.Recipe", "Recipe")
                        .WithMany("MeasurementIngredients")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredent");

                    b.Navigation("Measurement");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Cooking.Server.Models.Recipe", b =>
                {
                    b.Navigation("MeasurementIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
